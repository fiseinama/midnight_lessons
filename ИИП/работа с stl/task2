// –î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. 
// –ó–∞–º–µ–Ω–∏—Ç—å —á–∏—Å–ª–∞, –ø–æ–ø–∞–¥–∞—é—â–∏–µ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª [ùëé, ùëè] —á–∏—Å–ª–æ–º ùëã. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã. 
// –í—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å 
// (–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. –í—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü –∏ –ø–æ—Ç–æ–º –æ–ø—è—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å - –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ). –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int main() {
	setlocale(LC_ALL, "RU");
	int n, m;
	cout << "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª –æ—Ç n: ";
	cin >> n;
	cout << "–î–æ m: ";
	cin >> m;

	vector<int> a;
	for (int i = n; i <= m; i++)
		a.push_back(i);
	reverse(a.begin(), a.end());
	for (int num : a)
		cout << num;
	cout << endl;

	int A, B, X;
	cout << "A, B, X: ";
	cin >> A >> B >> X;

	auto is_in_range = [A, B](int num) {
		return (num >= A && num <= B) || (num <= A && num >= B);
		};

	// –ó–∞–º–µ–Ω—è–µ–º —á–∏—Å–ª–∞ –≤ –≤–µ–∫—Ç–æ—Ä–µ
	replace_if(a.begin(), a.end(), is_in_range, X);


	for (int num : a) {
		cout << num;
	}
	cout << endl;

	return 0;


	cout << "–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: " << endl;
	sort(a.begin(), a.end());

	for (vector<int>::iterator iter = a.begin(); iter != a.end(); iter++)
		cout << *iter;
	cout << endl;

	int N;
	cout << "–ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: ";
	cin >> N;
	auto el = lower_bound(a.begin(), a.end(), N); //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –º–µ–Ω—å—à–µ N
	a.insert(el, N);

	for (vector<int>::iterator iter = a.begin(); iter != a.end(); iter++)
		cout << *iter;
	cout << endl;

	cout << "–ë–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: " << endl;
	vector<int>::iterator iter1 = unique(a.begin(), a.end());
	a.erase(iter1, a.end());
	for (vector<int>::iterator iter = a.begin(); iter != a.end(); iter++)
		cout << *iter;
	cout << endl;
}
